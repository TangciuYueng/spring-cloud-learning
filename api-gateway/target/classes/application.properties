eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=api-gateway

server.port=8080

# trace the log info
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE

# define the route for our services
# id is usually the name of service
# uri is the url with lb:// to implement load balancing
# when we type Path: localhost:XXXX/api/product
# we go to the actually url of product service without knowing what the port is
spring.cloud.gateway.routes[0].id=product-service
spring.cloud.gateway.routes[0].uri=lb://product-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/product

spring.cloud.gateway.routes[1].id=order-service
spring.cloud.gateway.routes[1].uri=lb://order-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/order

# inventory service is just called by the order service
# thus we don't need to add it
#spring.cloud.gateway.routes[2].id=inventory-service
#spring.cloud.gateway.routes[2].uri=lb://inventory-service
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/inventory

# no static src...
spring.cloud.gateway.routes[2].id=discovery-service
spring.cloud.gateway.routes[2].uri=http://localhost:8761
spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/web
# replace the input url eureka/web with /
spring.cloud.gateway.routes[2].filters[0]=SetPath=/

# so we add the static src
spring.cloud.gateway.routes[3].id=discovery-service-static
spring.cloud.gateway.routes[3].uri=http://localhost:8761
spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/**
